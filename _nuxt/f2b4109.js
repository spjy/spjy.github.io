(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{508:function(e,n,r){"use strict";r.r(n),n.default="---\r\nheader: Digital Image Processing\r\ndescription: Changing images for the better (or worse).\r\n---\r\n\r\n# Finite Impulse Response Filters\r\n\r\n$$y[m,n] = \\sum_{k=-N}^N \\sum_{l=-N}^N h[k,l] x[m-k,n-l]$$\r\n\r\n# Edge Detection\r\n\r\n## Continuous Time Gradient Methods\r\n\r\nWe can use the gradient of an image to find edges.\r\n\r\n$$\\nabla f(x,y) = \\Bigg[\\frac{\\partial f}{\\partial x}, \\frac{\\partial f}{\\partial y} \\Bigg]$$\r\n\r\nIf the gradient is larger than some threshold $T$, we define those as edges.\r\n\r\n$$e(x,y) = \\begin{cases}\r\n1 & |\\nabla f(x,y)| > T \\\\\r\n0 & \\text{otherwise}\r\n\\end{cases}$$\r\n\r\n## Discrete Time Gradient Methods\r\n\r\nIn order to find the gradient, we must use approximations using finite differences. In this case, it is the central difference:\r\n\r\n$$\\frac{\\partial f(x,y)}{\\partial x} \\Big|_{x=m\\Delta_x, y=n\\Delta_y} \\approx \\frac{f[m+1,n]-f[m-1,n]}{2\\Delta_x}$$\r\n\r\n\r\n# Resolution Conversion\r\n\r\nTo change the resolution of an image, interpolating or decimating is required.\r\n\r\n## Interpolation\r\n\r\nImage interpolation is the upsampling of an image, or the insertion of data points into the image to increase resolution, then applying a filter to the upsampled image.\r\n\r\nProcedurally, if the rate increase is $U$, $U-1$ zeros are inserted between each original data point. Then, apply a filter $H(e^{j\\omega})$.\r\n\r\n### Interpolation System\r\n\r\n$$x[n] \\rightarrow \r\n\\boxed{\r\n  \\uparrow U\r\n} \\rightarrow\r\n\\boxed{\r\n  H(e^{j\\omega})\r\n} \\rightarrow\r\ny[n] \\text{}$$\r\n\r\n### Upsampling\r\n\r\nFirst, upsample the filter by factor $U$.\r\n\r\n$$y[n] = \r\n\\begin{cases} \r\n\\displaystyle x\\bigg[\\frac{n}{U}\\bigg] & n=KU \\text{ for some } K  \\\\\r\n0 & \\text{otherwise}\r\n\\end{cases}$$\r\n\r\n$$y[n] = \\sum_{k=-\\infty}^\\infty x[k] \\delta[n-kL]$$\r\n\r\n$$Y(e^{jw}) = X(e^{i\\omega U})$$ \r\n\r\n### Filter\r\n\r\nAfter upsampling, apply a filter to smooth out the image.\r\n\r\n$$H(e^{j\\omega}) = U \\sum_{k=-\\infty}^\\infty \\text{rect} \\bigg(U \\cdot \\frac{\\omega - 2\\pi k}{2\\pi} \\bigg)$$\r\n\r\n$$h=[n] = \\text{sinc}\\bigg( \\frac{n}{U} \\bigg)$$\r\n\r\n$$Y(e^{j\\omega}) = H(e^{j\\omega}) X(e^{j\\omega})$$\r\n\r\n## Decimation\r\n\r\nImage decimation is the application of a filter, then the deletion of data points between the original ones. Alternatively, it is the extraction of only certain samples of the image.\r\n\r\nProcedurally, if the period is $D$, we take only every $D$ point in the image.\r\n\r\n### Decimation System\r\n\r\n$$x[n] \\rightarrow \r\n\\boxed{\r\n  H(e^{j\\omega})\r\n} \\rightarrow\r\n\\boxed{\r\n  \\downarrow D\r\n} \\rightarrow\r\ny[n] \\text{}$$\r\n\r\n$$Y(e^{j\\omega}) = \\frac{1}{D}\\sum_{k=0}^{D-1} X(e^{i\\omega-2\\pi k /D}$$\r\n\r\n### Filter\r\n\r\nFirst, filter the image ot remove high freqencies.\r\n\r\n$$H(e^{j\\omega}) = \\sum_{k=-\\infty}^\\infty \\text{rect} \\bigg(D \\cdot \\frac{\\omega - 2\\pi k}{2\\pi} \\bigg)$$\r\n"}}]);