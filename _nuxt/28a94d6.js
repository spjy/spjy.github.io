(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{529:function(e,t,n){"use strict";n.r(t),t.default='---\r\ntitle: Documented Designs\r\nimage: /images/repeat-design.jpg\r\ndate: 2020-04-30\r\ndescription: Design patterns help us to solve common problems. Use them!\r\ntags: Design Patterns\r\ngithub:\r\nlink:\r\n---\r\n\r\n<a style="background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &quot;San Francisco&quot;, &quot;Helvetica Neue&quot;, Helvetica, Ubuntu, Roboto, Noto, &quot;Segoe UI&quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px" href="https://unsplash.com/@markusspiske?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge" target="_blank" rel="noopener noreferrer"><span style="display:inline-block;padding:2px 3px"><svg xmlns="http://www.w3.org/2000/svg" style="height:12px;width:auto;position:relative;vertical-align:middle;top:-2px;fill:white" viewBox="0 0 32 32"><path d="M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z"></path></svg></span><span style="display:inline-block;padding:2px 3px">Markus Spiske</span></a>\r\n\r\nAs humans, we tend to learn from prior experiences and spread that knowledge to progress as a whole, and the case is the same in software engineering. Thus, people in the field who discover novel methods to solve problems in a certain domain document those designs, such as the idea of a model-view-controller (MVC), in the form of a design pattern in hopes that other people may both benefit and critique that model to discover its use cases and advantages, and disadvantages.\r\n\r\n# Design patterns in other areas\r\n\r\nDesign patterns can also be seen with computer assemblies. There are a variety of recurring use cases for computers, such as portable computing, gaming, and high performance computing, and all these require varying component layouts. For example, a browsing computer may not need a graphics card or as much computing, so its form factor can be designed to be compact and minimalistic. On the other hand, a gaming computer may require more performance power, so a larger case may be required to fit larger and more components to serve its purpose. Furthermore, on an even larger scale, in a server environment, high performance computers consume even more resources than a gaming computer and thus require more space, components. Also, to maximize space, they may make the case height short but the area wide to stack them.\r\n\r\n# My experience with software design patterns\r\n\r\nPrior to learning what design patterns were, I have implemented a plethora of them, for example model-view-controller (MVC) when creating web applications with Express and React to easily separate areas of concern and observers when working with socket communication. Additionally, I have dabbled in the PHP framework Laravel where it seems to only use known design patterns, such as factories, abstract factories, builders, singletons, decorators, and facades. These design patterns did their job. For example, at first, I did not know how to structure or implement a web server and interface, so I experimented with combining the server and client into a monorepo and mashing the two concerns together. However, when I discovered MVC, I tried it out and it worked perfectly for my case.\r\n\r\n# The case for using design patterns\r\n\r\nDesign patterns may seem obvious and intuitive (maybe since I am versed in programming languages), but that is the goal- to document patterns that provide success to improve productivity for future implementations and to avoid encountering identical problems. It might also be useful for newcomers. In my opinion, these are all beneficial to draw on inspiration for many problems. Like the cliche phrase says, “don’t reinvent the wheel”, I think it applies perfectly here. If there exists a tried and true design that fits your use case, why not use it? Of course, there will be situations where many will not fit your situation, then you may need to invent your own!\r\n'}}]);